{
  "folders": [
    {
      "name": "viz_forge",
      "path": "."
    }
  ],
  "settings": {
    "editor.fontFamily": "JetBrains Mono, Fira Code, 'Cascadia Code', Consolas, 'Courier New', monospace",
    "editor.fontLigatures": "'calt', 'ss01', 'ss02', 'ss03', 'ss04', 'ss05', 'ss06', 'ss07', 'ss08'",
    "editor.fontSize": 14,
    "editor.lineHeight": 22,
    "editor.cursorBlinking": "phase",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": "active",
    "editor.guides.bracketPairsHorizontal": "active",
    "editor.guides.highlightActiveBracketPair": true,
    "editor.guides.indentation": true,
    "editor.stickyScroll.enabled": true,
    "editor.stickyScroll.maxLineCount": 5,
    "editor.minimap.renderCharacters": true,
    "editor.minimap.maxColumn": 120,
    "editor.minimap.scale": 3,
    "editor.accessibilitySupport": "on",
    "editor.inlayHints.enabled": "on",
    "editor.inlayHints.padding": true,
    "editor.semanticHighlighting.enabled": true,
    "editor.semanticTokenColorCustomizations": {
      "enabled": true
    },
    "editor.smoothScrolling": true,
    "editor.experimental.asyncTokenization": true,
    "window.autoDetectColorScheme": true,
    "window.commandCenter": true,
    "window.density.editorTabHeight": "compact",
    "workbench.preferredDarkColorTheme": "GitHub Dark Default",
    "workbench.list.smoothScrolling": true,
    "workbench.tree.expandMode": "singleClick",
    "workbench.tree.indent": 10,
    "workbench.editor.decorations.badges": true,
    "workbench.editor.decorations.colors": true,
    "github.copilot.chat.codeGeneration.instructions": [
      { "file": "./.github/prompts/eidosian-principles.prompt.md" },
      { "file": "./.github/prompts/eidosian-refinement.prompt.md" },
      { "file": "./.github/prompts/eidosian-style.prompt.md" },
      { "text": "No self congratulatory language." },
      { "text": "No unbased hype." },
      { "text": "No inflationary claims." },
      { "text": "No grandiosity." },
      { "text": "No self aggrandizing." },
      { "text": "Ensure humour." },
      { "text": "Ensure wit." },
      { "text": "Ensure all changes are retrocompatible." },
      { "text": "Strict typing." },
      { "text": "Systematic Naming." }
    ],
    "inlineChat.accessibleDiffView": "on",
    "jupyter.interactiveWindow.creationMode": "perFile",
    "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.rulers": [80, 100, 120],
      "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "explicit",
        "source.organizeImports": "explicit"
      }
    },
    "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.rulers": [80, 100, 120],
      "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "explicit",
        "source.organizeImports": "explicit"
      }
    },
    "[javascriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.rulers": [80, 100, 120]
    },
    "[typescriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.rulers": [80, 100, 120]
    },
    "[html]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.suggest.insertMode": "replace"
    },
    "[css]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.suggest.insertMode": "replace"
    },
    "[scss]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.suggest.insertMode": "replace"
    },
    "[less]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.tabSize": 2
    },
    "[json]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.quickSuggestions": {
        "strings": true // Keys deserve intelligence too
      }
    },
    "[jsonc]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.quickSuggestions": {
        "strings": true // Comments don't mean we can't be smart
      }
    },
    "[toml]": {
      "editor.defaultFormatter": "tamasfe.even-better-toml",
      "editor.formatOnSave": true,
      "editor.tabSize": 4,
      "editor.semanticHighlighting.enabled": true // Colors reveal intention
    },
    "[markdown]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.formatOnSave": true,
      "editor.wordWrap": "on",
      "editor.quickSuggestions": {
        "comments": true,
        "strings": true,
        "other": true
      },
      "editor.tabSize": 2,
      "editor.renderWhitespace": "all" // Invisible structure made visible
    },
    "[rust]": {
      "editor.defaultFormatter": "rust-lang.rust-analyzer",
      "editor.formatOnSave": true,
      "editor.tabSize": 4, // As the crab gods intended
      "editor.rulers": [100],
      "editor.semanticHighlighting.enabled": true
    },
    "[c]": {
      "editor.defaultFormatter": "ms-vscode.cpptools",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.rulers": [80, 100] // Memory efficiency begins with line length
    },
    "[cpp]": {
      "editor.defaultFormatter": "ms-vscode.cpptools",
      "editor.formatOnSave": true,
      "editor.tabSize": 2,
      "editor.rulers": [80, 100]
    },
    "[go]": {
      "editor.defaultFormatter": "golang.go",
      "editor.formatOnSave": true,
      "editor.tabSize": 4,
      "editor.insertSpaces": false, // Gophers insist on tabs
      "editor.rulers": [100],
      "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit" // Alphabetical or death
      }
    },
    "[java]": {
      "editor.defaultFormatter": "redhat.java",
      "editor.formatOnSave": true,
      "editor.tabSize": 4,
      "editor.rulers": [100, 120],
      "editor.semanticHighlighting.enabled": true // Enterprise code deserves enterprise colors
    },
    "[kotlin]": {
      "editor.defaultFormatter": "fwcd.kotlin",
      "editor.formatOnSave": true,
      "editor.tabSize": 4,
      "editor.rulers": [100, 120] // Less verbose Java still needs boundaries
    },
    "[python]": {
      "diffEditor.ignoreTrimWhitespace": false, // Whitespace is semantic here
      "editor.formatOnType": true,
      "editor.wordBasedSuggestions": "off",
      "editor.defaultFormatter": "ms-python.black-formatter", // Uncompromising code style
      "editor.tabSize": 4,
      "editor.rulers": [88, 120], // Black's default + sensible fallback
      "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit" // Sorted imports are happy imports
      }
    },
    "[shellscript]": {
      "files.eol": "auto",
      "editor.rulers": [80, 100], // Terminal width hasn't changed much since 1970
      "editor.tabSize": 2,
      "editor.insertSpaces": true,
      "editor.semanticHighlighting.enabled": true
    }
  }
}
